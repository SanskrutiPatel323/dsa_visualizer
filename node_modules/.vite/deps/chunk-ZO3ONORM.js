import {
  require_react
} from "./chunk-IXG3QTAX.js";
import {
  __esm,
  __toESM
} from "./chunk-J43GMYXM.js";

// node_modules/@material-ui/core/esm/utils/createChainedFunction.js
function createChainedFunction() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }
  return funcs.reduce(function(acc, func) {
    if (func == null) {
      return acc;
    }
    if (true) {
      if (typeof func !== "function") {
        console.error("Material-UI: Invalid Argument Type, must only provide functions, undefined, or null.");
      }
    }
    return function chainedFunction() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      acc.apply(this, args);
      func.apply(this, args);
    };
  }, function() {
  });
}
var init_createChainedFunction = __esm({
  "node_modules/@material-ui/core/esm/utils/createChainedFunction.js"() {
  }
});

// node_modules/@material-ui/core/esm/utils/isMuiElement.js
function isMuiElement(element, muiNames) {
  return React.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;
}
var React;
var init_isMuiElement = __esm({
  "node_modules/@material-ui/core/esm/utils/isMuiElement.js"() {
    React = __toESM(require_react());
  }
});

export {
  createChainedFunction,
  init_createChainedFunction,
  isMuiElement,
  init_isMuiElement
};
//# sourceMappingURL=chunk-ZO3ONORM.js.map
